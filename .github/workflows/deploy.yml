name: Build and Deploy

on:
    push:
        branches:
            - master
            - main
    pull_request:
        branches:
            - master
            - main
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        environment: Production - personal-website-firebase

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm run test:ci

            - name: Debug - Check Environment Variables
              env:
                  REACT_APP_EMAILJS_SERVICE_ID: ${{ secrets.REACT_APP_EMAILJS_SERVICE_ID }}
                  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
                  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
              run: |
                  echo "üîç Checking if secrets are accessible..."
                  echo "EMAILJS_SERVICE_ID length: ${#REACT_APP_EMAILJS_SERVICE_ID}"
                  echo "FIREBASE_PROJECT_ID length: ${#REACT_APP_FIREBASE_PROJECT_ID}"
                  echo "FIREBASE_API_KEY length: ${#REACT_APP_FIREBASE_API_KEY}"
                  if [ -z "$REACT_APP_FIREBASE_PROJECT_ID" ]; then
                    echo "‚ùå ERROR: REACT_APP_FIREBASE_PROJECT_ID is empty!"
                    exit 1
                  else
                    echo "‚úÖ REACT_APP_FIREBASE_PROJECT_ID is set (length: ${#REACT_APP_FIREBASE_PROJECT_ID})"
                  fi
                  echo "First 10 chars of PROJECT_ID: ${REACT_APP_FIREBASE_PROJECT_ID:0:10}"

            - name: Build application
              env:
                  # Inject GitHub secrets as environment variables during build
                  # EmailJS Configuration
                  REACT_APP_EMAILJS_SERVICE_ID: ${{ secrets.REACT_APP_EMAILJS_SERVICE_ID }}
                  REACT_APP_EMAILJS_TEMPLATE_ID: ${{ secrets.REACT_APP_EMAILJS_TEMPLATE_ID }}
                  REACT_APP_EMAILJS_PUBLIC_KEY: ${{ secrets.REACT_APP_EMAILJS_PUBLIC_KEY }}
                  # Firebase Configuration
                  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
                  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
                  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
                  REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
                  REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
                  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
                  REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build
                  path: build/

    deploy:
        needs: build
        runs-on: ubuntu-latest
        environment: Production - personal-website-firebase
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build
                  path: build/

            - name: Deploy to Firebase Hosting
              uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PERSONAL_WEBSITE_3580D }}
                  channelId: live
                  projectId: personal-website-3580d
